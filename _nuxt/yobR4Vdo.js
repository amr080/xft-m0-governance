var S=(e,t,s)=>{if(!t.has(e))throw TypeError("Cannot "+s)};var n=(e,t,s)=>(S(e,t,"read from private field"),s?s.call(e):t.get(e)),f=(e,t,s)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,s)},p=(e,t,s,i)=>(S(e,t,"write to private field"),i?i.call(e,s):t.set(e,s),s);var v=(e,t,s)=>(S(e,t,"access private method"),s);import{bw as D,bx as U,by as k,bz as q,bA as A,bB as F,bC as L,e as E,$ as P,bD as j,ac as I,bg as z,bE as B,bF as G,bG as H,bH as Q,r as T,N as _}from"./Tyql0LRw.js";import{u as $}from"./CEvEHNh7.js";import{i as J,g as V,c as N}from"./DkocL5JY.js";let M=[];function K(e){const t=e.chains;return J(M,t)?M:(M=t,t)}async function W(e,t){var a;const{chainId:s}=t,i=e.state.connections.get(((a=t.connector)==null?void 0:a.uid)??e.state.current);if(i){const o=i.connector;if(!o.switchChain)throw new D({connector:o});return await o.switchChain({chainId:s})}const r=e.chains.find(o=>o.id===s);if(!r)throw new U;return e.setState(o=>({...o,chainId:s})),r}var b,d,u,c,m,O,C,x,R,X=(R=class extends k{constructor(t,s){super();f(this,m);f(this,C);f(this,b,void 0);f(this,d,void 0);f(this,u,void 0);f(this,c,void 0);p(this,b,t),this.setOptions(s),this.bindMethods(),v(this,m,O).call(this)}bindMethods(){this.mutate=this.mutate.bind(this),this.reset=this.reset.bind(this)}setOptions(t){var i;const s=this.options;this.options=n(this,b).defaultMutationOptions(t),q(this.options,s)||n(this,b).getMutationCache().notify({type:"observerOptionsUpdated",mutation:n(this,u),observer:this}),s!=null&&s.mutationKey&&this.options.mutationKey&&A(s.mutationKey)!==A(this.options.mutationKey)?this.reset():((i=n(this,u))==null?void 0:i.state.status)==="pending"&&n(this,u).setOptions(this.options)}onUnsubscribe(){var t;this.hasListeners()||(t=n(this,u))==null||t.removeObserver(this)}onMutationUpdate(t){v(this,m,O).call(this),v(this,C,x).call(this,t)}getCurrentResult(){return n(this,d)}reset(){var t;(t=n(this,u))==null||t.removeObserver(this),p(this,u,void 0),v(this,m,O).call(this),v(this,C,x).call(this)}mutate(t,s){var i;return p(this,c,s),(i=n(this,u))==null||i.removeObserver(this),p(this,u,n(this,b).getMutationCache().build(n(this,b),this.options)),n(this,u).addObserver(this),n(this,u).execute(t)}},b=new WeakMap,d=new WeakMap,u=new WeakMap,c=new WeakMap,m=new WeakSet,O=function(){var s;const t=((s=n(this,u))==null?void 0:s.state)??F();p(this,d,{...t,isPending:t.status==="pending",isSuccess:t.status==="success",isError:t.status==="error",isIdle:t.status==="idle",mutate:this.mutate,reset:this.reset})},C=new WeakSet,x=function(t){L.batch(()=>{var s,i,r,a,o,w,y,h;if(n(this,c)&&this.hasListeners()){const l=n(this,d).variables,g=n(this,d).context;(t==null?void 0:t.type)==="success"?((i=(s=n(this,c)).onSuccess)==null||i.call(s,t.data,l,g),(a=(r=n(this,c)).onSettled)==null||a.call(r,t.data,null,l,g)):(t==null?void 0:t.type)==="error"&&((w=(o=n(this,c)).onError)==null||w.call(o,t.error,l,g),(h=(y=n(this,c)).onSettled)==null||h.call(y,void 0,t.error,l,g))}this.listeners.forEach(l=>{l(n(this,d))})})},R);function Y(e){return{mutationFn(t){return W(e,t)},mutationKey:["switchChain"]}}function Z(e,t){const s=t||V(),i=E(()=>s.defaultMutationOptions(H(e))),r=new X(s,i.value),a=P(r.getCurrentResult()),o=r.subscribe(h=>{j(a,h)}),w=(h,l)=>{r.mutate(h,l).catch(()=>{})};I(i,()=>{r.setOptions(i.value)}),Q(()=>{o()});const y=z(B(a));return I(()=>a.error,h=>{if(h&&G(i.value.throwOnError,[h]))throw h}),{...y,mutate:w,mutateAsync:a.mutate,reset:a.reset}}function tt(e,t){const{onChange:s}=t;return e._internal.chains.subscribe((i,r)=>{s(i,r)})}function st(e={}){const t=N(e),s=T(K(t));return tt(t,{onChange(){s.value=K(t)}}),s}function et(e={}){const{mutation:t}=e,s=N(e),i=Y(s),{mutate:r,mutateAsync:a,...o}=Z({...t,...i});return{...o,chains:st({config:s}),switchChain:r,switchChainAsync:a}}const at=()=>{const e=_().getNetwork(),t=E(()=>e.value.rpc.chainId),{chain:s}=$(),{switchChainAsync:i}=et(),r=E(()=>{var o;return((o=s==null?void 0:s.value)==null?void 0:o.id)===t.value});function a(){return console.log({connectedChain:s==null?void 0:s.value,chainId:t.value}),s&&s.value&&s.value.id!==t.value?i({chainId:t.value}):Promise.resolve(s==null?void 0:s.value)}return{forceSwitchChain:a,isCorrectChain:r}};export{Z as a,et as b,at as u};
